name: Deploy to EC2

on:
  push:
    branches: [ main ]
  workflow_dispatch:

jobs:
  deploy:
    runs-on: ubuntu-latest

    env:
      HOSTNAME:            ${{ secrets.EC2_HOSTNAME }}         # lifeline-kaus.duckdns.org
      USER_NAME:           ${{ secrets.EC2_USER_NAME }}        # ec2-user
      PRIVATE_KEY:         ${{ secrets.EC2_SSH_PRIVATE_KEY }}
      DJANGO_SECRET_KEY:   ${{ secrets.DJANGO_SECRET_KEY }}
      OPENAI_API_KEY:      ${{ secrets.OPENAI_API_KEY }}
      LETSENCRYPT_EMAIL:   ${{ secrets.LETSENCRYPT_EMAIL }}    # optional

    steps:
    - uses: actions/checkout@v4

    - name: Build frontend
      working-directory: ./frontend
      run: |
        npm ci
        npm run build

    - name: Write SSH key
      run: |
        echo "$PRIVATE_KEY" > private_key
        chmod 600 private_key

    - name: Resolve EC2 IP
      id: resolve
      run: |
        IP=$(dig +short "$HOSTNAME" @1.1.1.1 | head -n1)
        echo "ip=$IP" >> "$GITHUB_OUTPUT"

    - name: Copy artefacts & script to EC2
      run: |
        SSH_TARGET=${{ steps.resolve.outputs.ip }}
        scp -o StrictHostKeyChecking=no -i private_key -r \
            frontend/build/*               "$USER_NAME@$SSH_TARGET:/tmp/frontend_build/"
        scp -o StrictHostKeyChecking=no -i private_key -r \
            backend/*                      "$USER_NAME@$SSH_TARGET:/tmp/backend/"
        scp -o StrictHostKeyChecking=no -i private_key \
            deploy_script.sh               "$USER_NAME@$SSH_TARGET:/home/ec2-user/"

    - name: Run deployment script on EC2
      run: |
        SSH_TARGET=${{ steps.resolve.outputs.ip }}
        ssh -o StrictHostKeyChecking=no -i private_key "$USER_NAME@$SSH_TARGET" "
          export HOSTNAME='$HOSTNAME'
          export DJANGO_SECRET_KEY='$DJANGO_SECRET_KEY'
          export OPENAI_API_KEY='$OPENAI_API_KEY'
          export LETSENCRYPT_EMAIL='$LETSENCRYPT_EMAIL'
          chmod +x ~/deploy_script.sh
          ~/deploy_script.sh
        "
