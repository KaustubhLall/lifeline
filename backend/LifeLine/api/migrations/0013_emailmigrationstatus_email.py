# Generated by Django 5.2.5 on 2025-09-01 04:52

import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('api', '0012_mcpconnector_credentials_data_and_more'),
    ]

    operations = [
        migrations.CreateModel(
            name='EmailMigrationStatus',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('is_migrating', models.BooleanField(default=False)),
                ('last_migration_started', models.DateTimeField(blank=True, null=True)),
                ('last_migration_completed', models.DateTimeField(blank=True, null=True)),
                ('total_emails_found', models.IntegerField(default=0)),
                ('emails_processed', models.IntegerField(default=0)),
                ('emails_failed', models.IntegerField(default=0)),
                ('last_error', models.TextField(blank=True, null=True)),
                ('migration_progress', models.JSONField(default=dict, help_text='Detailed migration progress')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='email_migration_status', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name_plural': 'Email Migration Statuses',
            },
        ),
        migrations.CreateModel(
            name='Email',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('message_id', models.CharField(help_text='Gmail message ID', max_length=255, unique=True)),
                ('thread_id', models.CharField(blank=True, help_text='Gmail thread ID', max_length=255, null=True)),
                ('subject', models.TextField(blank=True, null=True)),
                ('sender', models.EmailField(help_text='From email address', max_length=254)),
                ('recipient', models.EmailField(help_text='To email address', max_length=254)),
                ('cc_recipients', models.JSONField(blank=True, default=list, help_text='CC recipients')),
                ('bcc_recipients', models.JSONField(blank=True, default=list, help_text='BCC recipients')),
                ('body_text', models.TextField(blank=True, help_text='Plain text body', null=True)),
                ('body_html', models.TextField(blank=True, help_text='HTML body', null=True)),
                ('sent_date', models.DateTimeField(help_text='When the email was sent')),
                ('received_date', models.DateTimeField(help_text='When the email was received')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('labels', models.JSONField(blank=True, default=list, help_text='Gmail labels')),
                ('is_read', models.BooleanField(default=False)),
                ('is_starred', models.BooleanField(default=False)),
                ('is_important', models.BooleanField(default=False)),
                ('has_attachments', models.BooleanField(default=False)),
                ('attachments_metadata', models.JSONField(blank=True, default=list, help_text='Attachment details')),
                ('embedding', models.JSONField(blank=True, help_text='Vector embedding of email content', null=True)),
                ('embedding_model', models.CharField(blank=True, help_text='Model used for embedding', max_length=100, null=True)),
                ('content_for_search', models.TextField(blank=True, help_text='Processed content for search', null=True)),
                ('raw_email_data', models.JSONField(blank=True, help_text='Full raw email data from Gmail API', null=True)),
                ('is_processed', models.BooleanField(default=False, help_text='Whether email has been processed for embeddings')),
                ('processing_error', models.TextField(blank=True, help_text='Error message if processing failed', null=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='emails', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['-received_date'],
                'indexes': [models.Index(fields=['user', 'message_id'], name='api_email_user_id_b64b37_idx'), models.Index(fields=['user', 'received_date'], name='api_email_user_id_021403_idx'), models.Index(fields=['user', 'sender'], name='api_email_user_id_703536_idx'), models.Index(fields=['user', 'is_read'], name='api_email_user_id_847816_idx'), models.Index(fields=['user', 'is_processed'], name='api_email_user_id_f8c9dd_idx'), models.Index(fields=['thread_id'], name='api_email_thread__ae864b_idx')],
            },
        ),
    ]
